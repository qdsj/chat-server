name: Chat Server Deploy

on:
  push:
    branches: [main, develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Load variables
        id: vars
        run: |
          echo ${{ github.ref }}
          environment=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          if [ $environment == 'prod' ]; then
            port='3201'
            socketPort='3211'
          else
            port='3200'
            socketPort='3210'
          fi

          dockerName='chatserver'
          sqlName='authqdsj'


          date=$(date +'%Y%m%d_%H%M%S')
          version=$(node -p "require('./package.json').version")
          tag="${environment}-${version}-${date}"
          echo ${tag}

          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "environment=${environment}" >> $GITHUB_OUTPUT
          echo "port=${port}" >> $GITHUB_OUTPUT
          echo "socketPort=${socketPort}" >> $GITHUB_OUTPUT
          echo "dockerName=${dockerName}-${environment}" >> $GITHUB_OUTPUT
          echo "sqlName=${sqlName}" >> data.env

      # 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 构建并推送 Docker 镜像
      - name: Build and push
        env:
          DOCKER_TAG: ${{ steps.vars.outputs.tag }}
          dockerName: ${{ steps.vars.outputs.dockerName }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: zenoschen/${{env.dockerName}}:${{ env.DOCKER_TAG }}

      # 通过 SSH 在服务器上部署
      - name: Deploy to Server
        env:
          port: ${{ steps.vars.outputs.port }}
          socketPort: ${{ steps.vars.outputs.socketPort }}
          dockerName: ${{ steps.vars.outputs.dockerName }}
          tag: ${{ steps.vars.outputs.tag }}
          sqlName: ${{ steps.vars.outputs.sqlName }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER_NAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            docker pull zenoschen/${{ env.dockerName }}:${{ env.tag }}
            docker stop ${{ env.dockerName }} || true
            docker rm ${{ env.dockerName }} || true
            docker run -d --name ${{ env.dockerName }} \
              -p ${{ env.port }}:${{ env.port }} \
              -p ${{ env.socketPort }}:${{ env.socketPort }} \
              -e DB_HOST=${{ secrets.SERVER_HOST }} \
              -e DB_USERNAME=${{ secrets.SQL_AUTHQDSJ_NAME }} \
              -e DB_PASSWORD=${{ secrets.SQL_AUTHQDSJ_KEY }} \
              -e DB_PORT=${{ secrets.SERVER_SQL_PORT }} \
              -e DB_DATABASE='authqdsj' \
              -e PORT=${{ env.port }} \
              zenoschen/${{ env.dockerName }}:${{ env.tag }}
